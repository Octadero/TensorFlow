// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: tensorflow/contrib/tpu/profiler/tpu_profiler.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct Tensorflow_ProfileRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".ProfileRequest"

  /// In future, the caller will be able to customize when profiling starts and
  /// stops. For now, it collects `duration_ms` milliseconds worth of data.
  public var durationMs: UInt64 = 0

  /// The maximum number of events to return. By default (value 0), return all
  /// events.
  public var maxEvents: UInt64 = 0

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularUInt64Field(value: &self.durationMs)
      case 2: try decoder.decodeSingularUInt64Field(value: &self.maxEvents)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.durationMs != 0 {
      try visitor.visitSingularUInt64Field(value: self.durationMs, fieldNumber: 1)
    }
    if self.maxEvents != 0 {
      try visitor.visitSingularUInt64Field(value: self.maxEvents, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }
}

public struct Tensorflow_ProfileResponse: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".ProfileResponse"

  /// Placeholder: return something meaningful.
  public var xprofResponseSize: UInt64 {
    get {return _storage._xprofResponseSize}
    set {_uniqueStorage()._xprofResponseSize = newValue}
  }

  /// Graphs of programs executed on TPUs during the profiling period.
  public var computationGraph: [Tensorflow_GraphDef] {
    get {return _storage._computationGraph}
    set {_uniqueStorage()._computationGraph = newValue}
  }

  /// Performance profile that can be used to annotate HLO operations in the
  /// computation graph.
  public var hloMetadata: Tensorflow_RunMetadata {
    get {return _storage._hloMetadata ?? Tensorflow_RunMetadata()}
    set {_uniqueStorage()._hloMetadata = newValue}
  }
  /// Returns true if `hloMetadata` has been explicitly set.
  public var hasHloMetadata: Bool {return _storage._hloMetadata != nil}
  /// Clears the value of `hloMetadata`. Subsequent reads from it will return its default value.
  public mutating func clearHloMetadata() {_storage._hloMetadata = nil}

  /// Encoded Trace proto message that contains metadata about the trace captured
  /// during the profiling period. Describes the devices and resources that
  /// 'trace_events' refers to.
  public var encodedTrace: Data {
    get {return _storage._encodedTrace}
    set {_uniqueStorage()._encodedTrace = newValue}
  }

  /// Assembles a hierarchical performance profile based on HLOs in trace events.
  /// If the trace covers multiple programs, the longest-running one is analyzed.
  /// See op_profile.proto for the detailed semantics of the returned profile.
  public var opProfile: Tensorflow_Tpu_OpProfile_Profile {
    get {return _storage._opProfile ?? Tensorflow_Tpu_OpProfile_Profile()}
    set {_uniqueStorage()._opProfile = newValue}
  }
  /// Returns true if `opProfile` has been explicitly set.
  public var hasOpProfile: Bool {return _storage._opProfile != nil}
  /// Clears the value of `opProfile`. Subsequent reads from it will return its default value.
  public mutating func clearOpProfile() {_storage._opProfile = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularUInt64Field(value: &_storage._xprofResponseSize)
        case 2: try decoder.decodeRepeatedMessageField(value: &_storage._computationGraph)
        case 3: try decoder.decodeSingularBytesField(value: &_storage._encodedTrace)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._opProfile)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._hloMetadata)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._xprofResponseSize != 0 {
        try visitor.visitSingularUInt64Field(value: _storage._xprofResponseSize, fieldNumber: 1)
      }
      if !_storage._computationGraph.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._computationGraph, fieldNumber: 2)
      }
      if !_storage._encodedTrace.isEmpty {
        try visitor.visitSingularBytesField(value: _storage._encodedTrace, fieldNumber: 3)
      }
      if let v = _storage._opProfile {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._hloMetadata {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "tensorflow"

extension Tensorflow_ProfileRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "duration_ms"),
    2: .standard(proto: "max_events"),
  ]

  public func _protobuf_generated_isEqualTo(other: Tensorflow_ProfileRequest) -> Bool {
    if self.durationMs != other.durationMs {return false}
    if self.maxEvents != other.maxEvents {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Tensorflow_ProfileResponse: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "xprof_response_size"),
    2: .standard(proto: "computation_graph"),
    5: .standard(proto: "hlo_metadata"),
    3: .standard(proto: "encoded_trace"),
    4: .standard(proto: "op_profile"),
  ]

  fileprivate class _StorageClass {
    var _xprofResponseSize: UInt64 = 0
    var _computationGraph: [Tensorflow_GraphDef] = []
    var _hloMetadata: Tensorflow_RunMetadata? = nil
    var _encodedTrace: Data = SwiftProtobuf.Internal.emptyData
    var _opProfile: Tensorflow_Tpu_OpProfile_Profile? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _xprofResponseSize = source._xprofResponseSize
      _computationGraph = source._computationGraph
      _hloMetadata = source._hloMetadata
      _encodedTrace = source._encodedTrace
      _opProfile = source._opProfile
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Tensorflow_ProfileResponse) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._xprofResponseSize != other_storage._xprofResponseSize {return false}
        if _storage._computationGraph != other_storage._computationGraph {return false}
        if _storage._hloMetadata != other_storage._hloMetadata {return false}
        if _storage._encodedTrace != other_storage._encodedTrace {return false}
        if _storage._opProfile != other_storage._opProfile {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
