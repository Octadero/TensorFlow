// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: tensorflow/contrib/lite/toco/types.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

/// Copyright 2017 The TensorFlow Authors. All Rights Reserved.
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///
///     http://www.apache.org/licenses/LICENSE-2.0
///
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// IODataType describes the numeric data types of input and output arrays
/// of a model.
public enum Toco_IODataType: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case unknown // = 0

  /// Float32, not quantized
  case float // = 1

  /// Uint8, quantized
  case quantizedUint8 // = 2

  /// Int32, not quantized
  case int32 // = 3

  /// Int64, not quantized
  case int64 // = 4

  /// String, not quantized
  case string // = 5

  /// Int16, quantized
  case quantizedInt16 // = 6

  /// Boolean
  case bool // = 7

  public init() {
    self = .unknown
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unknown
    case 1: self = .float
    case 2: self = .quantizedUint8
    case 3: self = .int32
    case 4: self = .int64
    case 5: self = .string
    case 6: self = .quantizedInt16
    case 7: self = .bool
    default: return nil
    }
  }

  public var rawValue: Int {
    switch self {
    case .unknown: return 0
    case .float: return 1
    case .quantizedUint8: return 2
    case .int32: return 3
    case .int64: return 4
    case .string: return 5
    case .quantizedInt16: return 6
    case .bool: return 7
    }
  }

}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Toco_IODataType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "IO_DATA_TYPE_UNKNOWN"),
    1: .same(proto: "FLOAT"),
    2: .same(proto: "QUANTIZED_UINT8"),
    3: .same(proto: "INT32"),
    4: .same(proto: "INT64"),
    5: .same(proto: "STRING"),
    6: .same(proto: "QUANTIZED_INT16"),
    7: .same(proto: "BOOL"),
  ]
}
